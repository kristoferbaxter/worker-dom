{"version":3,"file":"index.mjs","sources":["../output/worker-dom-consumer/src/nodes.js","../output/worker-dom-consumer/src/worker.js","../output/worker-dom-consumer/src/command.js","../output/worker-dom-consumer/src/hydrate.js","../output/worker-dom-consumer/src/mutate.js","../output/worker-dom-consumer/src/install.js","../output/worker-dom-consumer/src/index.js"],"sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet NODES;\nlet BASE_ELEMENT;\nexport function prepare(baseElement) {\n    NODES = new Map([[1, baseElement], [2, baseElement]]);\n    BASE_ELEMENT = baseElement;\n}\n/**\n * Create a real DOM Node from a skeleton Object (`{ nodeType, nodeName, attributes, children, data }`)\n * @example <caption>Text node</caption>\n *   createNode({ nodeType:3, data:'foo' })\n * @example <caption>Element node</caption>\n *   createNode({ nodeType:1, nodeName:'div', attributes:[{ name:'a', value:'b' }], childNodes:[ ... ] })\n */\nexport function createNode(skeleton) {\n    if (skeleton[0 /* nodeType */] === Node.TEXT_NODE) {\n        const node = document.createTextNode(skeleton[5 /* textContent */]);\n        storeNode(node, skeleton[7 /* _index_ */]);\n        return node;\n    }\n    const namespace = skeleton[6 /* namespaceURI */];\n    const node = namespace\n        ? document.createElementNS(namespace, skeleton[1 /* nodeName */])\n        : document.createElement(skeleton[1 /* nodeName */]);\n    (skeleton[2 /* attributes */] || []).forEach(attribute => {\n        if (attribute.namespaceURI) {\n            node.setAttributeNS(attribute.namespaceURI, attribute.name, attribute.value);\n        }\n        else {\n            node.setAttribute(attribute.name, attribute.value);\n        }\n    });\n    // TODO(KB): Restore Properties\n    // skeleton.properties.forEach(property => {\n    //   node[`${property.name}`] = property.value;\n    // });\n    (skeleton[4 /* childNodes */] || []).forEach(childNode => {\n        if (childNode[8 /* transferred */] === 0 /* FALSE */) {\n            node.appendChild(createNode(childNode));\n        }\n    });\n    storeNode(node, skeleton[7 /* _index_ */]);\n    return node;\n}\n/**\n * Returns the real DOM Element corresponding to a serialized Element object.\n * @param id\n * @return\n */\nexport function getNode(id) {\n    const node = NODES.get(id);\n    if (node && node.nodeName === 'BODY') {\n        // If the node requested is the \"BODY\"\n        // Then we return the base node this specific <amp-script> comes from.\n        // This encapsulates each <amp-script> node.\n        return BASE_ELEMENT;\n    }\n    return node;\n}\n/**\n * Establish link between DOM `node` and worker-generated identifier `id`.\n *\n * These _shouldn't_ collide between instances of <amp-script> since\n * each element creates it's own pool on both sides of the worker\n * communication bridge.\n * @param node\n * @param id\n */\nexport function storeNode(node, id) {\n    node._index_ = id;\n    NODES.set(id, node);\n}\n//# sourceMappingURL=nodes.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// TODO(KB): Fetch Polyfill for IE11.\nexport function createWorker(authorScriptURL) {\n    return Promise.all([fetch(__WORKER_DOM_URL__).then(response => response.text()), fetch(authorScriptURL).then(response => response.text())])\n        .then(([workerScript, authorScript]) => {\n        // TODO(KB): Minify this output during build process.\n        const keys = [];\n        for (let key in document.body.style) {\n            keys.push(`'${key}'`);\n        }\n        const code = `\n        'use strict';\n        ${workerScript}\n        (function() {\n          var self = this;\n          var document = this.document;\n          var localStorage = this.localStorage;\n          var location = this.location;\n          var defaultView = document.defaultView;\n          var Node = defaultView.Node;\n          var Text = defaultView.Text;\n          var Element = defaultView.Element;\n          var SVGElement = defaultView.SVGElement;\n          var Document = defaultView.Document;\n          var Event = defaultView.Event;\n          var MutationObserver = defaultView.MutationObserver;\n\n          function addEventListener(type, handler) {\n            return document.addEventListener(type, handler);\n          }\n          function removeEventListener(type, handler) {\n            return document.removeEventListener(type, handler);\n          }\n          this.appendKeys([${keys}]);\n          ${authorScript}\n        }).call(WorkerThread.monkey);`;\n        return new Worker(URL.createObjectURL(new Blob([code])));\n    })\n        .catch(error => {\n        return null;\n    });\n}\nexport function messageToWorker(worker, message) {\n    worker.postMessage(message);\n}\n//# sourceMappingURL=worker.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { messageToWorker } from './worker';\nimport { getNode } from './nodes';\nconst KNOWN_LISTENERS = [];\n/**\n * Instead of a whitelist of elements that need their value tracked, use the existence\n * of a property called value to drive the decision.\n * @param node node to check if values should be tracked.\n * @return boolean if the node should have its value property tracked.\n */\nconst shouldTrackChanges = (node) => node && 'value' in node;\n/**\n * When a node that has a value needing synced doesn't already have an event listener\n * listening for changed values, ensure the value is synced with a default listener.\n * @param worker whom to dispatch value toward.\n * @param node node to listen to value changes on.\n */\nexport const applyDefaultChangeListener = (worker, node) => {\n    shouldTrackChanges(node) && node.onchange === null && (node.onchange = () => fireValueChange(worker, node));\n};\n/**\n * Tell the worker DOM what the value is for a Node.\n * @param worker whom to dispatch value toward.\n * @param node where to get the value from.\n */\nconst fireValueChange = (worker, node) => {\n    messageToWorker(worker, {\n        [9 /* type */]: 5 /* SYNC */,\n        [36 /* sync */]: {\n            [7 /* _index_ */]: node._index_,\n            [18 /* value */]: node.value,\n        },\n    });\n};\n/**\n * Register an event handler for dispatching events to worker thread\n * @param worker whom to dispatch events toward\n * @param _index_ node index the event comes from (used to dispatchEvent in worker thread).\n * @return eventHandler function consuming event and dispatching to worker thread\n */\nconst eventHandler = (worker, _index_) => (event) => {\n    if (shouldTrackChanges(event.currentTarget)) {\n        fireValueChange(worker, event.currentTarget);\n    }\n    messageToWorker(worker, {\n        [9 /* type */]: 1 /* EVENT */,\n        [35 /* event */]: {\n            [7 /* _index_ */]: _index_,\n            [22 /* bubbles */]: event.bubbles,\n            [23 /* cancelable */]: event.cancelable,\n            [24 /* cancelBubble */]: event.cancelBubble,\n            [25 /* currentTarget */]: {\n                [7 /* _index_ */]: event.currentTarget._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [26 /* defaultPrevented */]: event.defaultPrevented,\n            [27 /* eventPhase */]: event.eventPhase,\n            [28 /* isTrusted */]: event.isTrusted,\n            [29 /* returnValue */]: event.returnValue,\n            [10 /* target */]: {\n                [7 /* _index_ */]: event.target._index_,\n                [8 /* transferred */]: 1 /* TRUE */,\n            },\n            [30 /* timeStamp */]: event.timeStamp,\n            [9 /* type */]: event.type,\n        },\n    });\n};\n/**\n * Process commands transfered from worker thread to main thread.\n * @param nodesInstance nodes instance to execute commands against.\n * @param worker whom to dispatch events toward.\n * @param mutation mutation record containing commands to execute.\n */\nexport function process(worker, mutation) {\n    const index = mutation[10 /* target */][7 /* _index_ */];\n    const target = getNode(index);\n    const shouldTrack = shouldTrackChanges(target);\n    let changeEventSubscribed = target.onchange !== null;\n    (mutation[21 /* removedEvents */] || []).forEach(eventSub => {\n        if (eventSub[9 /* type */] === 'change') {\n            changeEventSubscribed = false;\n        }\n        target.removeEventListener(eventSub[9 /* type */], KNOWN_LISTENERS[eventSub[32 /* index */]]);\n    });\n    (mutation[20 /* addedEvents */] || []).forEach(eventSub => {\n        if (eventSub[9 /* type */] === 'change') {\n            changeEventSubscribed = true;\n            target.onchange = null;\n        }\n        target.addEventListener(eventSub[9 /* type */], (KNOWN_LISTENERS[eventSub[32 /* index */]] = eventHandler(worker, index)));\n    });\n    if (shouldTrack && !changeEventSubscribed) {\n        applyDefaultChangeListener(worker, target);\n    }\n}\n//# sourceMappingURL=command.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNode, storeNode } from './nodes';\nimport { process, applyDefaultChangeListener } from './command';\nconst allTextNodes = (nodes) => nodes.length > 0 &&\n    [].every.call(nodes, (node) => ('nodeType' in node ? node.nodeType : node[0 /* nodeType */]) === 3 /* TEXT_NODE */);\n/**\n * Process MutationRecord from worker thread by comparing it versus the current DOM.\n * @param hydrationFromWorker contains mutations to compare or apply\n */\nexport function hydrate(mutations, baseElement, worker) {\n    // TODO(KB): Hydrations are not allowed to contain TransferredNodes.\n    // Perhaps we should create a TransferrableHydrationRecord.\n    const commands = [];\n    mutations.forEach(hydration => {\n        if (hydration[9 /* type */] === 2 /* CHILD_LIST */ && hydration[11 /* addedNodes */] !== undefined) {\n            (hydration[11 /* addedNodes */] || []).forEach((nodeToAdd, index) => {\n                if (nodeToAdd[8 /* transferred */] === 0 /* FALSE */) {\n                    const baseNode = getNode(hydration[10 /* target */][7 /* _index_ */]).childNodes[index] || baseElement;\n                    hydrateNode(baseNode, nodeToAdd, baseElement, worker);\n                }\n            });\n            // TODO(KB): Hydration can include changes to props and attrs. Let's allow mutation of attrs/props during hydration.\n        }\n        else if (hydration[9 /* type */] === 4 /* COMMAND */) {\n            commands.push(hydration);\n        }\n    });\n    // Processing order matters.\n    // For instance, Element.addEventListener requires the Element to exist first.\n    // Commands pass only the identifier for an element, and identifiers are stored in the main thread after the elements are created.\n    commands.forEach(command => process(worker, command));\n}\n/**\n * Stores the passed node and ensures all valid childNodes are hydrated.\n * @param node Real Node in DOM.\n * @param skeleton Skeleton Node representation created by WorkerDOM and transmitted across threads.\n */\nfunction hydrateElement(node, skeleton, baseElement, worker) {\n    if (skeleton[5 /* textContent */]) {\n        node.textContent = skeleton[5 /* textContent */];\n    }\n    storeNode(node, skeleton[7 /* _index_ */]);\n    // When hydrating an HTMLElement, there are some values that need to be synced to the background\n    // independently of if the background code has subscribed to an event on the Element.\n    // Primary Case: `<form><input><button onClick={function(){console.log(input.value)}} /></form>`\n    applyDefaultChangeListener(worker, node);\n    (skeleton[4 /* childNodes */] || []).forEach((childNode, index) => hydrateNode(node.childNodes[index], childNode, baseElement, worker));\n}\n/**\n * Compares the current node in DOM versus the skeleton provided during Hydration from worker thread.\n * Also, attempt to rationalize equivalence in output, but different by transmission nature.\n * @param node Real Node in DOM\n * @param skeleton Skeleton Node representation created by WorkerDOM and transmitted across threads.\n */\nfunction hydrateNode(node, skeleton, baseElement, worker) {\n    if (node.childNodes.length !== (skeleton[4 /* childNodes */] || []).length) {\n        // A limited number of cases when the number of childNodes doesn't match is allowable.\n        if (allTextNodes(node.childNodes)) {\n            if (skeleton[5 /* textContent */]) {\n                // Node with textContent but represented in SSR as Node.childNodes = [Text]\n                node.textContent = skeleton[5 /* textContent */];\n                storeNode(node, skeleton[7 /* _index_ */]);\n            }\n            else if (allTextNodes(skeleton[4 /* childNodes */] || [])) {\n                // Node with single textContent represented by multiple Text siblings.\n                // Some frameworks will create multiple Text nodes for a string, since it means they can update specific segments by direct reference.\n                // Hello, {name} => [Text('Hello, '), Text('user')]... Node.childNodes[1].textContent = 'another user';\n                node.removeChild(node.childNodes[0]);\n                (skeleton[4 /* childNodes */] || []).forEach(skeletonChild => {\n                    const skeletonText = document.createTextNode(skeletonChild[5 /* textContent */]);\n                    node.appendChild(skeletonText);\n                    storeNode(skeletonText, skeleton[7 /* _index_ */]);\n                });\n            }\n            return;\n        }\n        const validSkeletonChildren = (skeleton[4 /* childNodes */] || []).filter(childNode => !(childNode[0 /* nodeType */] === 3 /* TEXT_NODE */ &&\n            childNode[5 /* textContent */] === ''));\n        if (validSkeletonChildren.length === node.childNodes.length) {\n            hydrateElement(node, skeleton, baseElement, worker);\n        }\n    }\n    else {\n        hydrateElement(node, skeleton, baseElement, worker);\n    }\n}\n//# sourceMappingURL=hydrate.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNode, createNode } from './nodes';\nimport { process } from './command';\n// TODO(KB): Restore mutation threshold timeout.\n// const GESTURE_TO_MUTATION_THRESHOLD = 5000;\nlet MUTATION_QUEUE = [];\nlet PENDING_MUTATIONS = false;\nlet worker;\nexport function prepareMutate(passedWorker) {\n    worker = passedWorker;\n}\nconst mutators = {\n    [2 /* CHILD_LIST */](mutation, sanitizer) {\n        const parent = getNode(mutation[10 /* target */][7 /* _index_ */]);\n        const removedNodes = mutation[12 /* removedNodes */];\n        if (removedNodes) {\n            removedNodes.forEach(node => parent.removeChild(getNode(node[7 /* _index_ */])));\n        }\n        const addedNodes = mutation[11 /* addedNodes */];\n        const nextSibling = mutation[14 /* nextSibling */];\n        if (addedNodes) {\n            addedNodes.forEach(node => {\n                let newChild = getNode(node[7 /* _index_ */]);\n                if (!newChild) {\n                    newChild = createNode(node);\n                    if (sanitizer) {\n                        sanitizer.sanitize(newChild); // TODO(choumx): Inform worker?\n                    }\n                }\n                parent.insertBefore(newChild, (nextSibling && getNode(nextSibling[7 /* _index_ */])) || null);\n            });\n        }\n    },\n    [0 /* ATTRIBUTES */](mutation, sanitizer) {\n        const attributeName = mutation[15 /* attributeName */];\n        const value = mutation[18 /* value */];\n        if (attributeName != null && value != null) {\n            const node = getNode(mutation[10 /* target */][7 /* _index_ */]);\n            if (!sanitizer || sanitizer.validAttribute(node.nodeName, attributeName, value)) {\n                node.setAttribute(attributeName, value);\n            }\n            else {\n                // TODO(choumx): Inform worker?\n            }\n        }\n    },\n    [1 /* CHARACTER_DATA */](mutation, sanitizer) {\n        const value = mutation[18 /* value */];\n        if (value) {\n            // Sanitization not necessary for textContent.\n            getNode(mutation[10 /* target */][7 /* _index_ */]).textContent = value;\n        }\n    },\n    [3 /* PROPERTIES */](mutation, sanitizer) {\n        const propertyName = mutation[17 /* propertyName */];\n        const value = mutation[18 /* value */];\n        if (propertyName && value) {\n            const node = getNode(mutation[10 /* target */][7 /* _index_ */]);\n            if (!sanitizer || sanitizer.validProperty(node.nodeName, propertyName, value)) {\n                node[propertyName] = value;\n            }\n            else {\n                // TODO(choumx): Inform worker?\n            }\n        }\n    },\n    [4 /* COMMAND */](mutation) {\n        process(worker, mutation);\n    },\n};\n/**\n * Process MutationRecord from worker thread applying changes to the existing DOM.\n * @param hydrationFromWorker contains mutations to apply\n * @param nodes\n * @param worker\n */\nexport function mutate(mutations, sanitizer) {\n    //mutations: TransferrableMutationRecord[]): void {\n    // TODO(KB): Restore signature requiring lastMutationTime. (lastGestureTime: number, mutations: TransferrableMutationRecord[])\n    // if (performance.now() || Date.now() - lastGestureTime > GESTURE_TO_MUTATION_THRESHOLD) {\n    //   return;\n    // }\n    // this.lastGestureTime = lastGestureTime;\n    MUTATION_QUEUE = MUTATION_QUEUE.concat(mutations);\n    if (!PENDING_MUTATIONS) {\n        PENDING_MUTATIONS = true;\n        requestAnimationFrame(() => syncFlush(sanitizer));\n    }\n}\n/**\n * Apply all stored mutations syncronously. This method works well, but can cause jank if there are too many\n * mutations to apply in a single frame.\n *\n * Investigations in using asyncFlush to resolve are worth considering.\n */\nfunction syncFlush(sanitizer) {\n    const length = MUTATION_QUEUE.length;\n    MUTATION_QUEUE.forEach(mutation => mutators[mutation[9 /* type */]](mutation, sanitizer));\n    MUTATION_QUEUE.splice(0, length);\n    PENDING_MUTATIONS = false;\n}\n//# sourceMappingURL=mutate.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { hydrate } from './hydrate';\nimport { prepareMutate, mutate } from './mutate';\nimport { createWorker } from './worker';\nimport { prepare as prepareNodes } from './nodes';\nexport function install(baseElement, sanitizer) {\n    const authorURL = baseElement.getAttribute('src');\n    if (authorURL === null) {\n        return;\n    }\n    // console.log(`creating worker, author code: ${authorURL}`);\n    createWorker(authorURL).then(worker => {\n        if (worker === null) {\n            return;\n        }\n        prepareNodes(baseElement);\n        prepareMutate(worker);\n        worker.onmessage = ({ data }) => {\n            switch (data.type) {\n                case 2 /* HYDRATE */:\n                    // console.info(`hydration from worker: ${data.type}`, data.mutations);\n                    hydrate(data.mutations, baseElement, worker);\n                    break;\n                case 3 /* MUTATE */:\n                    // console.info(`mutation from worker: ${data.type}`, data.mutations);\n                    // mutationInstance.process(data.mutations);\n                    mutate(data.mutations, sanitizer);\n                    break;\n            }\n        };\n    });\n}\n//# sourceMappingURL=install.js.map","/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { install } from './install';\nexport function upgradeElement(baseElement) {\n    install(baseElement);\n}\n//# sourceMappingURL=index.js.map"],"names":["NODES","BASE_ELEMENT","prepare","baseElement","Map","createNode","skeleton","Node","TEXT_NODE","node","document","createTextNode","storeNode","namespace","createElementNS","createElement","attribute","namespaceURI","setAttributeNS","name","value","setAttribute","childNode","appendChild","getNode","id","get","nodeName","_index_","set","createWorker","authorScriptURL","Promise","all","fetch","__WORKER_DOM_URL__","then","response","text","workerScript","authorScript","keys","key","body","style","push","Worker","URL","createObjectURL","Blob","code","catch","KNOWN_LISTENERS","applyDefaultChangeListener","worker","onchange","node.onchange","postMessage","message","eventHandler","event","currentTarget","bubbles","cancelable","cancelBubble","defaultPrevented","eventPhase","isTrusted","returnValue","target","timeStamp","type","process","mutation","index","shouldTrack","changeEventSubscribed","eventSub","removeEventListener","addEventListener","allTextNodes","nodes","length","every","call","nodeType","hydrate","mutations","commands","forEach","hydration","undefined","nodeToAdd","baseNode","childNodes","hydrateNode","command","hydrateElement","textContent","removeChild","skeletonChild","skeletonText","filter","validSkeletonChildren","MUTATION_QUEUE","PENDING_MUTATIONS","mutators","sanitizer","parent","removedNodes","addedNodes","nextSibling","newChild","sanitize","insertBefore","attributeName","validAttribute","propertyName","validProperty","mutate","concat","requestAnimationFrame","syncFlush","splice","install","authorURL","getAttribute","prepareNodes","onmessage","data","worker.onmessage","upgradeElement"],"mappings":"aAqBA,IAAIA,CAAJ,CACIC,CAEEC,SAAUA,EAAV,CAAkBC,CAAlB,CAAsC,CAC1CH,CAAA,CAAQ,IAAII,GAAJ,CAAQ,CAAC,CAAC,CAAD,CAAID,CAAJ,CAAD,CAAwC,CAAC,CAAD,CAAIA,CAAJ,CAAxC,CAAR,CACRF,EAAA,CAAeE,CAF2B,CAYtCE,QAAUA,EAAV,CAAqBC,CAArB,CAAgD,IAChDA,CAAA,CAAQ,CAAR,IAAyCC,IAAAC,WAAgB,KACrDC,EAAOC,QAAAC,eAAA,CAAyBL,CAAA,CAA8B,CAA9B,CAAzB,CACbM,EAAA,CAAUH,CAAV,CAAgBH,CAAA,CAAQ,CAAR,CAAhB,QACOG,EAHoD,OAOvDA,EAAiC,CADjCI,CACiC,CADAP,CAAA,CAAiC,CAAjC,CACA,EAClCI,QAAAI,gBAAA,CAAyBD,CAAzB,CAAqCP,CAAA,CAAiC,CAAjC,CAArC,CADkC,CAEnCI,QAAAK,cAAA,CAAuBT,CAAA,CAAQ,CAAR,CAAvB,GACFA,CAAA,CAAiC,CAAjC,GAAmE,YAAY,CAAAU,CAAA,CAAA,EAAY,CACvFA,CAAAC,cACFR,CAAAS,eAAA,CAAoBF,CAAAC,aAApB,CAA4CD,CAAAG,KAA5C,CAA4DH,CAAAI,MAA5D,EAEAX,CAAAY,aAAA,CAAkBL,CAAAG,KAAlB,CAAkCH,CAAAI,MAAlC,CAJyF,IAW3Fd,CAAA,CAAiC,CAAjC,GAAmE,YAAY,CAAAgB,CAAA,CAAA,EAAY,CAC/C,IAAxCA,CAAA,CAAS,CAAT,GACFb,CAAAc,YAAA,CAAiBlB,CAAA,CAAWiB,CAAX,CAAjB,CAFyF,EAM7FV,EAAA,CAAUH,CAAV,CAAgBH,CAAA,CAAQ,CAAR,CAAhB,QACOG,EA7B6C,CAqChDe,QAAUA,EAAV,CAAkBC,CAAlB,CAA4B,QAC1BhB,EAAOT,CAAA0B,IAAA,CAAUD,CAAV,IAEiB,SAAlBhB,CAAAkB,UAIH1B,EAEFQ,CATyB;AAqB5BG,QAAUA,EAAV,CAAoBH,CAApB,CAA2DgB,CAA3D,CAAqE,CACxEhB,CAAAmB,QAAA,CAAqCH,CACtCzB,EAAA6B,IAAA,CAAUJ,CAAV,CAAchB,CAAd,CAFyE;ACvErEqB,QAAUA,EAAV,CAAuBC,CAAvB,CAA8C,OAC3CC,QAAAC,IAAA,CAAY,CAACC,KAAA,CAAMC,kBAAN,CAAAC,KAAA,CAA+B,CAAAC,CAAA,CAAA,EAAYA,CAAAC,KAAA,EAA3C,CAAD,CAA8DJ,KAAA,CAAMH,CAAN,CAAAK,KAAA,CAA4B,CAAAC,CAAA,CAAA,EAAYA,CAAAC,KAAA,EAAxC,CAA9D,CAAZ,CAAAF,KAAA,CACC,CAAC,CAACG,CAAD,CAAeC,CAAf,CAAD,CAAA,EAAiC,OAE/BC,EAAsB,OACvB,IAAIC,IAAOhC,SAAAiC,KAAAC,OACdH,CAAAI,KAAA,CAAU,IAAIH,CAAJ,GAAV,QA4BK,KAAII,MAAJ,CAAWC,GAAAC,gBAAA,CAAoB,IAAIC,IAAJ,CAAS,CA1BlCC,oCAETX,CAFSW,+1BAuBUT,CAvBVS,kBAwBPV,CAxBOU,yCA0BkC,CAAT,CAApB,CAAX,CAhC8B,CADlC,CAAAC,MAAA,CAmCE,EAAA,EACE,IApCJ,CAD2C;ACCpD,MAAMC,EAAgD,EAAtD,CAgBaC,EAA6B,CAACC,CAAD,CAAiB7C,CAAjB,CAAA4C,EAAkD,CACvE5C,CAAnB,EATiE,OASjE,EAAmBA,EAAnB,EAA6D,IAA7D,GAA2CA,CAAA8C,SAA3C,GAAsE9C,CAAA8C,SAAtE,CAAsF,EAAAC,EAAM,CAAgBF,CDwB5GG,YAAA,CCfwBC,EACtB,GAAwB,CADFA,EAEtB,IAA0B,EACxB,GAZgHjD,CAYnFmB,QADL,EAExB,IAbgHnB,CAarFW,MAFH,CAFJsC,CDexB,CCxB4F,CAA5F,CAD0F,CAhB5F,CAyCMC,EAAe,CAACL,CAAD,CAAiB1B,CAAjB,CAAA+B,EAAsC,CAAAC,CAAA,CAAA,EAAsB,CACxDC,IAAAA,EAAAD,CAAAC,cAlCkCpD,IAAQ,SAAWA,KAmClDoD,CDF1B,CCE0BD,CAAAC,cDF1B,CCEkBP,CDFlBG,YAAA,CCfwBC,EACtB,GAAwB,CADFA,EAEtB,IAA0B,EACxB,GAA6BjD,CAAAmB,QADL,EAExB,IAA2BnB,CAAAW,MAFH,CAFJsC,CDexB,ECIgBJ,EDJhBG,YAAA,CCIwBC,EACtB,GAAwB,CADFA,EAEtB,IAA2B,EACzB,GAA6B9B,CADJ,EAEzB,IAA6BgC,CAAAE,QAFJ,EAGzB,IAAgCF,CAAAG,WAHP,EAIzB,IAAkCH,CAAAI,aAJT,EAKzB,IAAmC,EACjC,GAA8BJ,CAAAC,cAAAjC,QADG,EAEjC,GAA+B,CAFE,CALV,EASzB,IAAsCgC,CAAAK,iBATb,EAUzB,IAAgCL,CAAAM,WAVP,EAWzB,IAA+BN,CAAAO,UAXN,EAYzB,IAAiCP,CAAAQ,YAZR,EAazB,IAA4B,EAC1B,GAA8BR,CAAAS,OAAAzC,QADJ,EAE1B,GAA+B,CAFL,CAbH;CAiBzB,IAA+BgC,CAAAU,UAjBN,EAkBzB,GAA0BV,CAAAW,KAlBD,CAFLb,CDJxB,CCA+E,CAmC3Ec,SAAUA,EAAV,CAAkBlB,CAAlB,CAAkCmB,CAAlC,CAAuE,OACrEC,EAAgBD,CAAA,CAAQ,EAAR,CAAA,CAAkC,CAAlC,EAChBJ,EAAS7C,CAAA,CAAQkD,CAAR,EACTC,EAA0CN,CAA1CM,EAvE2D,OAuE3DA,EAA0CN,OAC5CO,EAAqD,IAArDA,GAAiCP,CAAAd,WAEpCkB,CAAA,CAAQ,EAAR,GAA6C,YAAY,CAAAI,CAAA,CAAA,EAAW,CAC1B,WAArCA,CAAA,CAAQ,CAAR,IACFD,EAAwB,CAAA,EAE1BP,EAAAS,oBAAA,CAA2BD,CAAA,CAAQ,CAAR,CAA3B,CAA6DzB,CAAA,CAAgByB,CAAA,CAAQ,EAAR,CAAhB,CAA7D,CAJmE,IAMpEJ,CAAA,CAAQ,EAAR,GAA2C,YAAY,CAAAI,CAAA,CAAA,EAAW,CACxB,WAArCA,CAAA,CAAQ,CAAR,IACFD,CACA,CADwB,CAAA,CACxB,CAAAP,CAAAd,SAAA,CAAkB,KAEpBc,EAAAU,iBAAA,CAAwBF,CAAA,CAAQ,CAAR,CAAxB,CAA2DzB,CAAA,CAAgByB,CAAA,CAAQ,EAAR,CAAhB,CAA3D,CAAgHlB,CAAA,CAAaL,CAAb,CAAqBoB,CAArB,CAAhH,CALiE,EAO/DC,IAAe,CAACC,GAClBvB,CAAA,CAA2BC,CAA3B,CAAmCe,CAAnC,CApByE,CC3E7E,MAAMW,EAAgB,CAAAC,CAAA,CAAAD,EACL,CADKA,CACpBC,CAAAC,OADoBF,EAEpB,EAAAG,MAAAC,KAAA,CACEH,CADF,CAEG,CAAAxE,CAAA,CAAA,EAAsH,CAAtH,IAAgD,UAAA,EAAcA,EAAd,CAAqBA,CAAA4E,SAArB,CAAqC5E,CAAA,CAAI,CAAJ,CAArF,CAFH,CASF6E;QAAgBA,EAAV,CAAkBC,CAAlB,CAA4DpF,CAA5D,CAAkFmD,CAAlF,CAAgG,OAG9FkC,EAA0C,EAChDD,EAAAE,QAAA,CAAkB,CAAAC,CAAA,CAAA,EAAY,CACS,IAAjCA,CAAA,CAAS,CAAT,GAAmHC,IAAAA,KAA5CD,CAAA,CAAS,EAAT,GACxEA,CAAA,CAAS,EAAT,GAA2C,YAAY,CAACE,CAAD,CAAYlB,CAAZ,CAAA,EAAqB,CAC/B,IAAxCkB,CAAA,CAAS,CAAT,IACIC,CACN,CADiBrE,CAAA,CAAQkE,CAAA,CAAS,EAAT,CAAA,CAAmC,CAAnC,CAAR,CAAAI,WAAA,CAAmFpB,CAAnF,CACjB,EAD8GvE,CAC9G,CAAA4F,CAAA,CAAYF,CAAZ,CAAsBD,CAAtB,CAAsDzF,CAAtD,CAAmEmD,CAAnE,EAHyE,GAOnC,IAAjCoC,CAAA,CAAS,CAAT,GACTF,CAAA3C,KAAA,CAAc6C,CAAd,CAV0B,CAA9B,CAgBAF,EAAAC,QAAA,CAAiB,CAAAO,CAAA,CAAA,EAAWxB,CAAA,CAAQlB,CAAR,CAAgB0C,CAAhB,CAA5B,CApBoG,CA4BtGC,QAASA,EAAT,CAAwBxF,CAAxB,CAAiDH,CAAjD,CAA8EH,CAA9E,CAAoGmD,CAApG,CAAkH,CAC3GhD,CAAA,CAA8B,CAA9B,IACHG,CAAAyF,aAAoB5F,CAAA,CAA8B,CAA9B,EAGtBM,EAAA,CAAUH,CAAV,CAAgBH,CAAA,CAAQ,CAAR,CAAhB,CAKA+C,EAAA,CAA2BC,CAA3B,CAAmC7C,CAAnC,GAEEH,CAAA,CAAiC,CAAjC,GAAmE,YACnE,CAACgB,CAAD,CAA+BoD,CAA/B,CAAA,EAAuDqB,CAAA,CAAYtF,CAAAqF,WAAA,CAAgBpB,CAAhB,CAAZ,CAAoCpD,CAApC,CAA+CnB,CAA/C,CAA4DmD,CAA5D,EAbuD;AAuBlHyC,QAASA,EAAT,CAAqBtF,CAArB,CAAiCH,CAAjC,CAA8DH,CAA9D,CAAoFmD,CAApF,CAAkG,CAC5F7C,CAAAqF,WAAAZ,UAA2BA,CAAE5E,CAAA,CAAiC,CAAjC,CAAF4E,EAAqE,EAArEA,SAEzBF,CAAA,CAAavE,CAAAqF,WAAb,EACGxF,CAAA,CAA8B,CAA9B,GAEHG,CAAAyF,YACA,CADoB5F,CAAA,CAA8B,CAA9B,CACpB,CAAAM,CAAA,CAAUH,CAAV,CAAqCH,CAAA,CAAQ,CAAR,CAArC,GACS0E,CAAA,CAAc1E,CAAA,CAAiC,CAAjC,CAAd,EAAiF,EAAjF,IAITG,CAAA0F,YAAA,CAAiB1F,CAAAqF,WAAA,CAAgB,CAAhB,CAAjB,GACExF,CAAA,CAAiC,CAAjC,GAAmE,YAAY,CAAA8F,CAAA,CAAA,EAAgB,CACzFC,CAAAA,CAAe3F,QAAAC,eAAA,CAAyByF,CAAA,CAAmC,CAAnC,CAAzB,CACrB3F,EAAAc,YAAA,CAAiB8E,CAAjB,CACAzF,EAAA,CAAUyF,CAAV,CAA6C/F,CAAA,CAAQ,CAAR,CAA7C,CAH+F,IAS7CgG,CAAEhG,CAAA,CAAiC,CAAjC,CAAFgG,EAAqE,EAArEA,QAAAC,CACtD,CAAAjF,CAAA,CAAA,EACE,EAC8D,CAD9D,GACGA,CAAA,CAA+B,CAA/B,CADH,EAEsE,EAFtE,GAEGA,CAAA,CAA+B,CAA/B,CAFH,CAFoDiF,CAOpDrB,UAAiCzE,CAAAqF,WAAAZ,SACnCe,CAAA,CAAexF,CAAf,CAA0CH,CAA1C,CAAoDH,CAApD,CAAiEmD,CAAjE,EAGF2C,CAAA,CAAexF,CAAf,CAA0CH,CAA1C,CAAoDH,CAApD,CAAiEmD,CAAjE,CAjC8F,CC7DlG,IAAIkD,EAAgD,EAApD,CACIC,EAA6B,CAAA,CADjC,CAEInD,CAMJ;MAAMoD,EAEF,EACF,GAAgCjC,EAAuCkC,EAAoB,OACnFC,EAASpF,CAAA,CAAQiD,CAAA,CAAQ,EAAR,CAAA,CAAkC,CAAlC,CAAR,MAEToC,EAAepC,CAAA,CAAQ,EAAR,CACjBoC,IACFA,CAAApB,QAAA,CAAqB,CAAAhF,CAAA,CAAA,EAAQmG,CAAAT,YAAA,CAAmB3E,CAAA,CAAQf,CAAA,CAAI,CAAJ,CAAR,CAAnB,CAA7B,CAGIqG,EAAAA,CAAarC,CAAA,CAAQ,EAAR,QACbsC,EAActC,CAAA,CAAQ,EAAR,CAChBqC,IACFA,CAAArB,QAAA,CAAmB,CAAAhF,CAAA,CAAA,EAAO,KACpBuG,EAAWxF,CAAA,CAAQf,CAAA,CAAI,CAAJ,CAAR,CACVuG,KACHA,EAAW3G,CAAA,CAAWI,CAAX,EACPkG,GACFA,CAAAM,SAAA,CAAmBD,CAAnB,EAGJJ,EAAAM,aAAA,CAAoBF,CAApB,CAA+BD,CAA/B,EAA8CvF,CAAA,CAAQuF,CAAA,CAAW,CAAX,CAAR,CAA9C,EAAkG,IAAlG,CARwB,CAA1B,CAXuF,CADzF,EAwBF,GAAgCtC,EAAuCkC,EAAqB,OACpFQ,EAAgB1C,CAAA,CAAQ,EAAR,EAChBrD,EAAQqD,CAAA,CAAQ,EAAR,CACO,OAAjB0C,GAAkC,MAAT/F,IACrBX,EAAOe,CAAA,CAAQiD,CAAA,CAAQ,EAAR,CAAA,CAAkC,CAAlC,CAAR,EACRkC,GAAa,CAAAA,CAAAS,eAAA,CAAyB3G,CAAAkB,SAAzB,CAAwCwF,CAAxC,CAAuD/F,CAAvD,GAChBX,CAAAY,aAAA,CAAkB8F,CAAlB,CAAiC/F,CAAjC,EANsF,CAxB1F,EAoCF,GAAoCqD,EAA4D,OACxFrD,EAAQqD,CAAA,CAAQ,EAAR,CACVrD,KAEFI,CAAA,CAAQiD,CAAA,CAAQ,EAAR,CAAA,CAAkC,CAAlC,CAAR,CAAAyB,aAAqF9E,EAJO,CApC9F,EA2CF,GAAgCqD,EAAuCkC,EAAqB,OACpFU,EAAe5C,CAAA,CAAQ,EAAR,EACfrD,EAAQqD,CAAA,CAAQ,EAAR,CACV4C,IAAgBjG,IACZX,CACF,CADSe,CAAA,CAAQiD,CAAA,CAAQ,EAAR,CAAA,CAAkC,CAAlC,CAAR,CACT,CAAA,CAACkC,CAAD,EAAcA,CAAAW,cAAA,CAAwB7G,CAAAkB,SAAxB,CAAuC0F,CAAvC,CAAqDjG,CAArD,KAChBX,CAAA,CAAK4G,CAAL,EAAqBjG,EANiE,CA3C1F,EAuDF,GAA6BqD,EAAqC,CAChED,CAAA,CAAQlB,CAAR;AAAgBmB,CAAhB,CADgE,CAvDhE,CAkEE8C,SAAUA,EAAV,CAAiBhC,CAAjB,CAA2DoB,CAA3D,CAAgF,CAOpFH,CAAA,CAAiBA,CAAAgB,OAAA,CAAsBjC,CAAtB,CACZkB,KACHA,CACA,CADoB,CAAA,CACpB,CAAAgB,qBAAA,CAAsB,EAAA,EAAMC,CAAA,CAAUf,CAAV,CAA5B,EAVkF,CAoBtFe,QAASA,EAAT,CAAmBf,CAAnB,CAAwC,OAChCzB,EAASsB,CAAAtB,OACfsB,EAAAf,QAAA,CAAuB,CAAAhB,CAAA,CAAA,EAAYiC,CAAA,CAASjC,CAAA,CAAQ,CAAR,CAAT,CAAA,CAA2CA,CAA3C,CAAqDkC,CAArD,CAAnC,CAEAH,EAAAmB,OAAA,CAAsB,CAAtB,CAAyBzC,CAAzB,CACAuB,EAAA,CAAoB,CAAA,CALkB,CCpGlCmB,QAAUA,EAAV,CAAkBzH,CAAlB,CAAwCwG,CAAxC,CAAuD,OACrDkB,EAAY1H,CAAA2H,aAAA,CAAyB,KAAzB,CACA,QAAdD,GAKJ/F,CAAA,CAAa+F,CAAb,CAAAzF,KAAA,CAA6B,CAAAkB,CAAA,CAAA,EAAS,CACrB,OAAXA,IAIJyE,CAAAA,CAAa5H,CAAb4H,CAGA,CDNFzE,CCME,CAFcA,CAEd,CAAAA,CAAA0E,UAAA,CAAmB,CAAC,CAAE,KAAAC,CAAF,CAAD,CAAAC,EAAgC,QACzCD,CAAA1D,YACN,EAEEe,CAAA,CAAQ2C,CAAA1C,UAAR,CAAwBpF,CAAxB,CAAqCmD,CAArC,aAEF,EAGEiE,CAAA,CAAOU,CAAA1C,UAAP,CAAuBoB,CAAvB,EAT6C,EARf,CAAtC,CAP2D,uBCJvDwB,QAAA,CAAyBhI,CAAzB,CAA6C,CACjDyH,CAAA,CAAQzH,CAAR,CADiD;"}